<div className="mt-2 flex-1 overflow-y-auto">
          {currentChats.map((person) => (
            <div
              key={person.id}
              onClick={() => setSelectedUser(person)}
              className="group m-1 flex cursor-pointer items-center gap-3 rounded-lg border-b border-gray-100 p-3 transition-all duration-200 hover:bg-white hover:shadow-sm active:scale-[0.98] dark:border-neutral-800 dark:hover:bg-neutral-800"
            >
              {/* Profile Image */}
              <div className="relative">
                <div className="h-12 w-12 overflow-hidden rounded-full ring-2 ring-gray-100 transition-all duration-200 group-hover:ring-blue-200 dark:ring-neutral-700 dark:group-hover:ring-blue-500/30">
                  <img
                    className="h-full w-full object-cover"
                    src={person.img}
                    alt={person.name}
                  />
                </div>
                {person.online && (
                  <div className="absolute -right-0.5 -bottom-0.5 h-3 w-3 animate-pulse rounded-full border-2 border-white bg-green-400 dark:border-neutral-900"></div>
                )}
              </div>

              {/* Chat Info */}
              {!isCompact && (
                <div className="min-w-0 flex-1">
                  <div className="flex items-center justify-between">
                    <p className="truncate font-medium text-gray-900 transition-colors group-hover:text-blue-600 dark:text-white dark:group-hover:text-blue-400">
                      {person.name}
                    </p>
                    <span className="text-xs text-gray-500 dark:text-neutral-400">
                      {person.time}
                    </span>
                  </div>
                  <div className="flex items-center justify-between">
                    <p className="truncate text-sm text-gray-600 dark:text-neutral-300">
                      {person.lastMsg}
                    </p>
                    {person.unread > 0 && (
                      <span className="ml-2 flex h-5 w-5 animate-bounce items-center justify-center rounded-full bg-blue-500 text-xs text-white">
                        {person.unread}
                      </span>
                    )}
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>
        <div>
          {users.map((user, i) => (
            <div key={i}>
              <div>
                {user.name} {user.type === "presence_join" ? "join" : "left"}
                chat
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Chat Window */}
      {selectedUser && (
        <div className="flex w-full flex-col bg-white dark:bg-neutral-900">
          {/* Chat Header */}
          <div className="flex items-center gap-3 border-b border-gray-200 bg-white p-4 backdrop-blur-sm dark:border-neutral-700 dark:bg-neutral-800/50">
            <button
              onClick={handleBackToChats}
              className="rounded-full p-2 transition-all duration-200 hover:bg-gray-100 active:scale-90 dark:hover:bg-neutral-700"
            >
              <ArrowLeft className="h-5 w-5 text-gray-600 dark:text-neutral-300" />
            </button>

            <div className="h-10 w-10 overflow-hidden rounded-full ring-2 ring-gray-200 dark:ring-neutral-600">
              <img
                className="h-full w-full object-cover"
                src={selectedUser.img}
                alt={selectedUser.name}
              />
            </div>

            <div className="flex-1">
              <p className="font-medium text-gray-900 dark:text-white">
                {selectedUser.name}
              </p>
              <p className="text-xs text-gray-500 dark:text-neutral-400">
                {selectedUser.online ? (
                  <span className="flex items-center gap-1">
                    <span className="h-2 w-2 animate-pulse rounded-full bg-green-400"></span>
                    Online
                  </span>
                ) : (
                  "Last seen recently"
                )}
              </p>
            </div>

            <div className="flex gap-2">
              <button className="rounded-full p-2 transition-all duration-200 hover:scale-110 hover:bg-gray-100 active:scale-95 dark:hover:bg-neutral-700">
                <Phone className="h-5 w-5 text-gray-600 dark:text-neutral-300" />
              </button>
              <button className="rounded-full p-2 transition-all duration-200 hover:scale-110 hover:bg-gray-100 active:scale-95 dark:hover:bg-neutral-700">
                <Video className="h-5 w-5 text-gray-600 dark:text-neutral-300" />
              </button>
            </div>
          </div>

          {/* Messages */}
          <div className="flex-1 overflow-y-auto bg-gray-50 p-4 dark:bg-neutral-900">
            <div className="space-y-4">
              {selectedUser.messages.map((message, index) => (
                <div
                  key={message.id}
                  className={`animate-in slide-in-from-bottom-5 flex duration-300 ${
                    message.sender === "me" ? "justify-end" : "justify-start"
                  }`}
                  style={{ animationDelay: `${index * 100}ms` }}
                >
                  <div
                    className={`max-w-xs rounded-2xl px-4 py-3 shadow-sm backdrop-blur-sm transition-all duration-200 hover:scale-[1.02] ${
                      message.sender === "me"
                        ? "bg-gradient-to-br from-blue-500 to-blue-600 text-white"
                        : "border border-gray-100 bg-white text-gray-800 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-200"
                    }`}
                  >
                    <p className="text-sm leading-relaxed break-words">
                      {message.text}
                    </p>
                    <p
                      className={`mt-2 text-xs ${
                        message.sender === "me"
                          ? "text-blue-100"
                          : "text-gray-500 dark:text-neutral-400"
                      }`}
                    >
                      {message.time}
                    </p>
                  </div>
                </div>
              ))}
            </div>
          </div>
