{isCompact && (
        <div className="flex w-80 flex-col border-r border-gray-200 bg-gray-50 dark:border-neutral-700 dark:bg-neutral-800">
          {/* Active Collaborators */}
          <div className="flex-1 overflow-y-auto p-4">
            {isLoading ? (
              <div className="flex items-center justify-center py-8">
                <Loader2 className="h-6 w-6 animate-spin text-blue-500" />
              </div>
            ) : (
              <div className="space-y-2">
                {joiningUsers.map((user) => (
                  <div
                    key={user.id}
                    className="flex items-center gap-3 rounded-lg p-2 transition-colors hover:bg-gray-100 dark:hover:bg-neutral-700"
                  >
                    <div
                      className={`h-8 w-8 rounded-full ${getUserAvatarColor(user.name)} relative flex items-center justify-center text-sm font-medium text-white`}
                    >
                      {getUserInitials(user.name)}
                      <div className="absolute -right-0.5 -bottom-0.5 h-3 w-3 rounded-full border-2 border-white bg-green-500 dark:border-neutral-700"></div>
                    </div>
                    <div className="min-w-0 flex-1">
                      <p className="truncate font-medium text-gray-900 dark:text-neutral-100">
                        {user.name}
                      </p>
                      <p className="text-xs text-green-600 dark:text-green-400">
                        Online
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* Connection Status */}
          <div className="border-t border-gray-200 p-4 dark:border-neutral-700">
            <div className="flex items-center gap-2 text-sm">
              <div
                className={`h-2 w-2 rounded-full ${connected ? "bg-green-500" : "bg-red-500"}`}
              ></div>
              <span className="text-gray-600 dark:text-neutral-400">
                {connected ? "Connected" : "Disconnected"}
              </span>
            </div>
          </div>
        </div>
      )}